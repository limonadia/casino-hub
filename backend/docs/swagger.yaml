basePath: /
definitions:
  models.SpinRequest:
    properties:
      betAmount:
        type: integer
      playerId:
        type: string
    type: object
  models.SpinResult:
    properties:
      jackpotWin:
        type: boolean
      message:
        type: string
      multiplier:
        type: number
      newBalance:
        type: integer
      success:
        type: boolean
      symbols:
        items:
          type: integer
        type: array
      winAmount:
        type: integer
      winType:
        type: string
    type: object
  models.User:
    properties:
      balance:
        type: integer
      email:
        type: string
      experience:
        type: integer
      freeSpins:
        type: integer
      id:
        type: integer
      lastActive:
        type: string
      level:
        type: integer
      name:
        type: string
      score:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Simple casino games backend in Go with MySQL
  title: Casino Hub API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password, returns a JWT token.
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Could not create token
          schema:
            type: string
      summary: Authenticate user
      tags:
      - auth
  /api/auth/logout:
    post:
      description: Logs out a user (client should just discard the token).
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout user
      tags:
      - auth
  /api/auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account with username, email, and password.
        Initial balance is 5000.
      parameters:
      - description: User signup details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Database error
          schema:
            type: string
      summary: Register a new user
      tags:
      - auth
  /api/slot/spin:
    post:
      consumes:
      - application/json
      description: Spins slot with bet amount
      parameters:
      - description: Spin Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SpinRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SpinResult'
      summary: Spin slot machine
      tags:
      - slot
swagger: "2.0"
